# Scan this file for changes every 30 seconds
refresh_rate: 60 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(utc)} [{X(request_id):36.36}] [{T}] {h({l:>5})} {t} - {m}{n}"

  # An appender named "requests" that writes to a file with a custom pattern encoder
  application:
    kind: rolling_file
    path: "log/application.log"
    append: true
    encoder:
      kind: pattern
      pattern: "{d(%Y-%m-%d %H:%M:%S %Z)(utc)} [{X(request_id):36.36}] [{T}] {h({l:>5})} {t} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        pattern: "log/application.{}.log.gz"
        count: 20
        base: 0

# Set the default logging level to "trace" and attach the "stdout" appender to the root
root:
  level: trace
  appenders:
    - stdout
    - application